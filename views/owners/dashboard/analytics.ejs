<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Analytics - Tomato</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <style>
    body {
      background-color: #f8f9fa;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .container {
      max-width: 900px;
    }

    canvas {
      background: #fff;
      border-radius: 10px;
      box-shadow: 0 0 20px rgba(0,0,0,0.05);
      padding: 20px;
    }
  </style>
</head>
<body>
  <div class="container my-5">
    <h2 class="mb-4 text-center"><i class="bi bi-bar-chart-line"></i> 7-Day Revenue Analytics</h2>

    <canvas id="revenueChart" height="120"></canvas>

    <div class="text-muted text-center mt-3">
      Data updates automatically based on recent orders.
    </div>
  </div>

  <script>
    async function loadRevenueChart() {
      try {
        const response = await fetch('/owners/api/revenue-last-7-days');
        const data = await response.json();

        const ctx = document.getElementById('revenueChart').getContext('2d');
        new Chart(ctx, {
          type: 'line',
          data: {
            labels: data.labels,
            datasets: [{
              label: 'Revenue (₹)',
              data: data.revenue,
              fill: true,
              backgroundColor: 'rgba(220, 53, 69, 0.2)',
              borderColor: 'rgba(220, 53, 69, 1)',
              borderWidth: 2,
              tension: 0.3,
              pointBackgroundColor: 'rgba(220, 53, 69, 1)',
              pointRadius: 4,
              pointHoverRadius: 6
            }]
          },
          options: {
            responsive: true,
            plugins: {
              legend: {
                position: 'top'
              },
              tooltip: {
                callbacks: {
                  label: (context) => `₹${context.parsed.y}`
                }
              }
            },
            scales: {
              y: {
                beginAtZero: true,
                ticks: {
                  callback: value => `₹${value}`
                }
              }
            }
          }
        });
      } catch (err) {
        console.error('Error loading chart data:', err);
      }
    }

    loadRevenueChart();
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
