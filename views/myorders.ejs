
 <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>My Orders</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <style>
    body {
      background-color: #fff5f5;
      font-family: 'Segoe UI', sans-serif;
    }

    .orders-container {
      max-width: 800px;
      margin: 2rem auto;
    }

    .order-card {
      position: relative;
      background-color: white;
      border: 2px solid #dc3545;
      border-radius: 12px;
      padding: 1.5rem;
      margin-bottom: 1.5rem;
      box-shadow: 0 4px 10px rgba(220, 53, 69, 0.15);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .order-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 16px rgba(220, 53, 69, 0.25);
    }

    .order-card h5 {
      color: #dc3545;
      font-weight: bold;
    }

    .order-card ul {
      padding-left: 1.2rem;
    }

    .order-card li {
      margin-bottom: 0.4rem;
    }

   .status-badge {
  position: absolute;
  top: 1rem;
  right: 1rem;
  padding: 0.4rem 0.8rem;
  border-radius: 20px;
  font-weight: bold;
  color: #000; /* Always black text for readability */
  font-size: 0.85rem;
  background-color: #ffc107; /* default fallback */
  box-shadow: 0 0 6px rgba(0,0,0,0.1);
}

.status-Confirmed {
  background-color: #ffccd5;
}

.status-Ready\ to\ Pick\ Up {
  background-color: #f8d7da;
}

.status-Out\ for\ Delivery {
  background-color: #ffeeba;
}

.status-Completed {
  background-color: #c3f7ca;
}


    .back-btn {
      margin-top: 2rem;
      display: inline-block;
      background-color: white;
      color: #dc3545;
      border: 2px solid #dc3545;
      padding: 0.5rem 1rem;
      border-radius: 8px;
      text-decoration: none;
      transition: all 0.3s ease;
    }

    .back-btn:hover {
      background-color: #dc3545;
      color: white;
    }
  </style>
</head>
<body>

  <div class="container orders-container">
    <h2 class="text-center mb-4 text-danger">My Orders</h2>

    <div id="ordersList">

    <% if (orders.length > 0) { %>
  <% orders.forEach(order => { %>
    <div class="order-card">
      <div class="status-badge status-<%= order.status.replace(/ /g, '\\ ') %>"><%= order.status %></div>
      <h5>Order #<%= order._id %></h5>
      <ul>
        <% order.items.forEach(item => { %>
          <li><%= item.name %> x <%= item.quantity %> — ₹<%= item.price %></li>
        <% }) %>
      </ul>
      <p><strong>Total:</strong> ₹<%= order.totalAmount %></p>
      <p><strong>Ordered At:</strong> <%= order.createdAt.toLocaleString() %></p>
    
       <!-- Added Review Button -->
      <% if (order.status && order.status.trim() === 'Completed' && !order.isReviewed) { %>
  <a href="/review/<%= order._id %>" class="btn btn-outline-danger mt-3">Review Food</a>
<% } %>

    </div>
  <% }) %>


    <% } else { %>
      <p class="text-center text-muted">You have not placed any orders yet.</p>
    <% } %>
    </div>

    <div class="text-center">
      <a href="/main" class="back-btn">⬅ Back to Main</a>
    </div>
  </div>

  <script>
  async function fetchOrders() {
    try {
      const response = await fetch('/api/myorders');
      const orders = await response.json();
      orders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)); // Sort newest first

      const container = document.getElementById('ordersList');
      if (!container) return;

      if (!Array.isArray(orders) || orders.length === 0) {
        container.innerHTML = '<p class="text-center text-muted">You have not placed any orders yet.</p>';
        return;
      }

     container.innerHTML = orders.map(order => {
  const statusClass = order.status.replace(/ /g, '\\\\ ');
  const itemsHTML = order.items.map(item => 
    `<li>${item.name} x ${item.quantity} — ₹${item.price}</li>`).join('');
  const createdAt = new Date(order.createdAt).toLocaleString();

  // ✅ Add this block here
  let reviewButtonHTML = '';
  if (order.status === 'Completed' && !order.isReviewed) {
    reviewButtonHTML = `<a href="/review/${order._id}" class="btn btn-outline-danger mt-3">Review Food</a>`;
  }

  return `
    <div class="order-card">
      <div class="status-badge status-${statusClass}">${order.status}</div>
      <h5>Order #${order._id}</h5>
      <ul>${itemsHTML}</ul>
      <p><strong>Total:</strong> ₹${order.totalAmount}</p>
      <p><strong>Ordered At:</strong> ${createdAt}</p>
      ${reviewButtonHTML}
    </div>
  `;
}).join('');


    } catch (error) {
      console.error('Failed to fetch orders:', error);
    }
  }

  // Initial load
  fetchOrders();
  // Auto-refresh every 5 seconds
  setInterval(fetchOrders, 5000);
</script>


</body>
</html>
